################### WIFIMON SECURE-PROCESSOR CONFIGURATION ####################
spring.config.use-legacy-processing=true

######## application properties ########
server.port=
# Insert 8443 for secure agent and 9000 for non secure agent
#server.ssl.key-store=
#e.g. server.ssl.key-store=./keystore/wifimon.jks
#server.ssl.key-store-password=
#e.g. server.ssl.key-store-password=
#server.ssl.key-password=
#e.g. server.ssl.key-password=
#logging.file=./logs/secure-processor.log
# default location to secure-processor logs is "./logs/secure-processor.log". If you want to change it, uncomment and set a different location/file name

######## postgres properties ########
spring.datasource.url=
#e.g. spring.datasource.url=jdbc:postgresql://localhost:5432/wifimon_database
spring.datasource.username=
spring.datasource.password=

######## elasticsearch properties ########
elasticsearch.clustername=
# Insert the name of the elasticsearch cluster, e.g. elasticsearch.clustername=elasticsearch
elasticsearch.host=
# Insert the FQDN elasticsearch listens on
elasticsearch.port=9200
elasticsearch.indexnamemeasurement=wifimon
elasticsearch.typenamemeasurement=measurement
elasticsearch.indexnameradius=radiuslogs
elasticsearch.typenameradius=logs
elasticsearch.indexnamedhcp=dhcplogs
elasticsearch.typenamedhcp=dhcplog
elasticsearch.indexnameprobes=probes
elasticsearch.typenameprobes=measurement
elasticsearch.indexnametwamp=twamp
elasticsearch.typenametwamp=twamp

######## ip encryption ###################
sha.key=
# Insert the encryption key for the IPs (String type)

######## JSON Collector ##################
# Insert true if you want to stream eduroam logs or false otherwise
json.collect=
# Insert the URL on which the JSON collector listens, e.g. http://collector_IP
json.collector=

######## X-Pack Configuration ############
xpack.security.enabled=false
ssl.certificate.type=keystore
ssl.http.user.username=elastic
ssl.http.user.phrase=
ssl.http.keystore.filepath=
ssl.http.keystore.phrase=
ssl.http.truststore.filepath=
ssl.http.truststore.phrase=
ssl.http.key.phrase=

### rabbitMQ ###

# name of the MQ used to fetch probes measurements
rabbitmq.probesQueue.name=probesQueueTest
# name of the key for the probes queue
rabbitmq.probesRoutingKey.name=probesRoutingTest
# name of the MQ used to fetch twamp measurements
rabbitmq.twampQueue.name=twampQueueTest
# name of the key for the twamp queue
rabbitmq.twampRoutingKey.name=twampRoutingTest
# name of the MQ exchange used to locate queues. Depending on your setup this may not be necessary.
rabbitmq.exchange.name=test_exchange
# URL of the rabbitMQ service hosting the queues. Below is a sample as used in CloudAMQP online service, your case may vary depending on the implementation used.
cloudamqp_url=amqps://<user>:<password>@<host>/<user>

### etc ###

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
